import Foundation
import SwiftUI

/// Represents a preview of a `UIViewController` within a SwiftUI view.
///
/// This structure enables the embedding of a `UIViewController` for preview purposes in a SwiftUI environment,
/// allowing UIKit views to be rendered on SwiftUI's preview canvas. This is particularly useful during the
/// development phase to integrate UIKit components seamlessly with SwiftUI projects.
///
/// - Note: Ensure that the `UIViewController` to be previewed is provided through the `viewControllerBuilder`
/// closure. This approach allows for dynamic instantiation of the view controller.
///
/// ## Example Usage
/// Here's how you can use `ViewControllerPreview` to preview a `UIViewController`:
///
/// ```swift
/// import SwiftUI
///
/// class ViewController: UIViewController { â€¦ }
///
/// struct ViewController_Previews: PreviewProvider {
///   static var previews: some View {
///     ViewControllerPreview {
///       ViewController()
///     }
///   }
/// }
/// ```
struct ViewControllerPreview: UIViewControllerRepresentable {
  /// The closure that returns an instance of `UIViewController`.
  ///
  /// This closure is invoked to instantiate the view controller that will be previewed.
  var viewControllerBuilder: () -> UIViewController
  
  /// Creates a new instance of `ViewControllerPreview`.
  ///
  /// Initializes the preview with a closure that constructs the `UIViewController` to be previewed.
  ///
  /// - Parameter viewControllerBuilder: A closure that when called, returns an instance of a `UIViewController`.
  init(_ viewControllerBuilder: @escaping () -> UIViewController) {
    self.viewControllerBuilder = viewControllerBuilder
  }
  
  /// Constructs the `UIViewController` to be previewed.
  ///
  /// This method is called by SwiftUI to create the `UIViewController` instance for preview. The instance
  /// is generated by invoking the `viewControllerBuilder` closure.
  ///
  /// - Parameter context: The context in which the view controller is created. Not used in this implementation.
  /// - Returns: An instance of `UIViewController` as returned by the `viewControllerBuilder` closure.
  func makeUIViewController(context: Context) -> some UIViewController {
    viewControllerBuilder()
  }
  
  /// Updates the displayed `UIViewController`.
  ///
  /// SwiftUI invokes this method to update the view controller with new data. Since previewing typically
  /// doesn't require updating the view controller dynamically, no implementation is provided.
  ///
  /// - Parameters:
  ///   - uiViewController: The `UIViewController` instance that may need updating.
  ///   - context: The context in which the update occurs. Not used in this implementation.
  func updateUIViewController(_ uiViewController: UIViewControllerType, context: Context) {
    // No update logic needed for preview
  }
}
